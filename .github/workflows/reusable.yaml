name: Reusable Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'Environment to deploy to'
    outputs:    
      get-short-sha_commit:
        description: 'Get short SHA of the commit'
        value: ${{ jobs.terraform-plan.outputs.get-short-sha_commit }}
  
# Permissions 
permissions:
  contents: read       # needed for checkout
  pull-requests: write # needed for commenting on PRs

jobs:
###################################################################################################################   
##### PLAN STAGE ##################################################################################################
###################################################################################################################  
  terraform-plan:
    if: 
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }} 
    outputs:
      tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}
      get-short-sha_commit: ${{ steps.get-short-sha_commit.outputs.short_sha_commit }}

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout code
      uses: actions/checkout@v3

    # Get the short SHA of the commit    
    - name: Get short SHA of the commit 
      id: get-short-sha_commit
      run: |
        SHORT_SHA_COMMIT=$(echo $GITHUB_SHA | cut -c1-7)
        echo "short_sha_commit=$SHORT_SHA_COMMIT" >> $GITHUB_OUTPUT

    # If the exit code is 2 the Terraform Apply Job will run.  If the exit code is 0 or 1 the Terraform Apply Job will not run.
    - name: Terraform Plan
      id: tf-plan    
      run: |
        export exitcode=2
        echo "exitcode=$exitcode" >> "$GITHUB_OUTPUT"

###################################################################################################################   
##### Apply STAGE #################################################################################################
################################################################################################################### 
  terraform-apply:
    name: 'Terraform Apply'
    #if: contains(github.ref, 'refs/heads/staging') && needs.terraform-plan.outputs.tfplanExitCode == 2 || github.ref == 'refs/heads/main' && needs.terraform-plan.outputs.tfplanExitCode == 2
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }} 
    needs: [terraform-plan]
    
    steps:   
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
